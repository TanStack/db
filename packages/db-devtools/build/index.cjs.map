{"version":3,"sources":["../src/registry.ts","../src/components/CollectionDetails.tsx","../src/components/TransactionList.tsx","../src/DbDevtoolsPanel.tsx","../src/DbDevtools.tsx","../src/index.ts","../src/theme.ts","../src/constants.ts","../src/TanstackDbDevtools.tsx"],"sourcesContent":["import type { CollectionImpl } from \"@tanstack/db\"\nimport type {\n  CollectionMetadata,\n  CollectionRegistryEntry,\n  DbDevtoolsRegistry,\n  TransactionDetails,\n} from \"./types\"\n\nclass DbDevtoolsRegistryImpl implements DbDevtoolsRegistry {\n  public collections = new Map<string, CollectionRegistryEntry>()\n  private pollingInterval: number | null = null\n  private readonly POLLING_INTERVAL_MS = 1000 // Poll every second for metadata updates\n\n  constructor() {\n    // Start polling for metadata updates\n    this.startPolling()\n  }\n\n  registerCollection = (collection: CollectionImpl<any, any, any>): void => {\n    const metadata: CollectionMetadata = {\n      id: collection.id,\n      type: this.detectCollectionType(collection),\n      status: collection.status,\n      size: collection.size,\n      hasTransactions: collection.transactions.size > 0,\n      transactionCount: collection.transactions.size,\n      createdAt: new Date(),\n      lastUpdated: new Date(),\n      gcTime: collection.config.gcTime,\n      timings: this.isLiveQuery(collection)\n        ? {\n            totalIncrementalRuns: 0,\n          }\n        : undefined,\n    }\n\n    const entry: CollectionRegistryEntry = {\n      weakRef: new WeakRef(collection),\n      metadata,\n      isActive: false,\n    }\n\n    this.collections.set(collection.id, entry)\n\n    // Track performance for live queries\n    if (this.isLiveQuery(collection)) {\n      this.instrumentLiveQuery(collection, entry)\n    }\n  }\n\n  unregisterCollection = (id: string): void => {\n    const entry = this.collections.get(id)\n    if (entry) {\n      // Release any hard reference\n      entry.hardRef = undefined\n      entry.isActive = false\n      this.collections.delete(id)\n    }\n  }\n\n  getCollectionMetadata = (id: string): CollectionMetadata | undefined => {\n    const entry = this.collections.get(id)\n    if (!entry) return undefined\n\n    // Try to get fresh data from the collection if it's still alive\n    const collection = entry.weakRef.deref()\n    if (collection) {\n      // Update metadata with fresh data\n      entry.metadata.status = collection.status\n      entry.metadata.size = collection.size\n      entry.metadata.hasTransactions = collection.transactions.size > 0\n      entry.metadata.transactionCount = collection.transactions.size\n      entry.metadata.lastUpdated = new Date()\n    }\n\n    return { ...entry.metadata }\n  }\n\n  getAllCollectionMetadata = (): Array<CollectionMetadata> => {\n    const results: Array<CollectionMetadata> = []\n\n    for (const [_id, entry] of this.collections) {\n      const collection = entry.weakRef.deref()\n      if (collection) {\n        // Collection is still alive, update metadata\n        entry.metadata.status = collection.status\n        entry.metadata.size = collection.size\n        entry.metadata.hasTransactions = collection.transactions.size > 0\n        entry.metadata.transactionCount = collection.transactions.size\n        entry.metadata.lastUpdated = new Date()\n        results.push({ ...entry.metadata })\n      } else {\n        // Collection was garbage collected, mark it\n        entry.metadata.status = `cleaned-up`\n        entry.metadata.lastUpdated = new Date()\n        results.push({ ...entry.metadata })\n      }\n    }\n\n    return results\n  }\n\n  getCollection = (id: string): CollectionImpl<any, any, any> | undefined => {\n    const entry = this.collections.get(id)\n    if (!entry) return undefined\n\n    const collection = entry.weakRef.deref()\n    if (collection && !entry.isActive) {\n      // Create hard reference\n      entry.hardRef = collection\n      entry.isActive = true\n    }\n\n    return collection\n  }\n\n  releaseCollection = (id: string): void => {\n    const entry = this.collections.get(id)\n    if (entry && entry.isActive) {\n      // Release hard reference\n      entry.hardRef = undefined\n      entry.isActive = false\n    }\n  }\n\n  getTransactions = (collectionId?: string): Array<TransactionDetails> => {\n    const transactions: Array<TransactionDetails> = []\n\n    for (const [id, entry] of this.collections) {\n      if (collectionId && id !== collectionId) continue\n\n      const collection = entry.weakRef.deref()\n      if (!collection) continue\n\n      for (const [txId, transaction] of collection.transactions) {\n        transactions.push({\n          id: txId,\n          collectionId: id,\n          state: transaction.state,\n          mutations: transaction.mutations.map((m) => ({\n            id: m.mutationId,\n            type: m.type,\n            key: m.key,\n            optimistic: m.optimistic,\n            createdAt: m.createdAt,\n            original: m.original,\n            modified: m.modified,\n            changes: m.changes,\n          })),\n          createdAt: transaction.createdAt,\n          updatedAt: transaction.updatedAt,\n          isPersisted: transaction.state === `completed`,\n        })\n      }\n    }\n\n    return transactions.sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    )\n  }\n\n  getTransaction = (id: string): TransactionDetails | undefined => {\n    for (const [collectionId, entry] of this.collections) {\n      const collection = entry.weakRef.deref()\n      if (!collection) continue\n\n      const transaction = collection.transactions.get(id)\n      if (transaction) {\n        return {\n          id,\n          collectionId,\n          state: transaction.state,\n          mutations: transaction.mutations.map((m) => ({\n            id: m.mutationId,\n            type: m.type,\n            key: m.key,\n            optimistic: m.optimistic,\n            createdAt: m.createdAt,\n            original: m.original,\n            modified: m.modified,\n            changes: m.changes,\n          })),\n          createdAt: transaction.createdAt,\n          updatedAt: transaction.updatedAt,\n          isPersisted: transaction.state === `completed`,\n        }\n      }\n    }\n    return undefined\n  }\n\n  cleanup = (): void => {\n    // Stop polling\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval)\n      this.pollingInterval = null\n    }\n\n    // Release all hard references\n    for (const [_id, entry] of this.collections) {\n      if (entry.isActive) {\n        entry.hardRef = undefined\n        entry.isActive = false\n      }\n    }\n  }\n\n  garbageCollect = (): void => {\n    // Remove entries for collections that have been garbage collected\n    for (const [id, entry] of this.collections) {\n      const collection = entry.weakRef.deref()\n      if (!collection) {\n        this.collections.delete(id)\n      }\n    }\n  }\n\n  private startPolling = (): void => {\n    if (this.pollingInterval) return\n\n    this.pollingInterval = window.setInterval(() => {\n      // Garbage collect dead references\n      this.garbageCollect()\n\n      // Update metadata for active collections\n      for (const [_id, entry] of this.collections) {\n        if (!entry.isActive) continue // Only update metadata for inactive collections to avoid holding refs\n\n        const collection = entry.weakRef.deref()\n        if (collection) {\n          entry.metadata.status = collection.status\n          entry.metadata.size = collection.size\n          entry.metadata.hasTransactions = collection.transactions.size > 0\n          entry.metadata.transactionCount = collection.transactions.size\n          entry.metadata.lastUpdated = new Date()\n        }\n      }\n    }, this.POLLING_INTERVAL_MS)\n  }\n\n  private detectCollectionType = (\n    collection: CollectionImpl<any, any, any>\n  ): `collection` | `live-query` => {\n    // Check the devtools type marker first\n    if (collection.config.__devtoolsType) {\n      return collection.config.__devtoolsType\n    }\n\n    // Check if the collection ID suggests it's a live query\n    if (collection.id.startsWith(`live-query-`)) {\n      return `live-query`\n    }\n\n    // Default to regular collection\n    return `collection`\n  }\n\n  private isLiveQuery = (\n    collection: CollectionImpl<any, any, any>\n  ): boolean => {\n    return this.detectCollectionType(collection) === `live-query`\n  }\n\n  private instrumentLiveQuery = (\n    collection: CollectionImpl<any, any, any>,\n    entry: CollectionRegistryEntry\n  ): void => {\n    // This is where we would add performance tracking for live queries\n    // We'll need to hook into the query execution pipeline to track timings\n    // For now, this is a placeholder\n    if (!entry.metadata.timings) {\n      entry.metadata.timings = {\n        totalIncrementalRuns: 0,\n      }\n    }\n  }\n}\n\n// Create and export the global registry\nexport function createDbDevtoolsRegistry(): DbDevtoolsRegistry {\n  return new DbDevtoolsRegistryImpl()\n}\n\n// Initialize the global registry if not already present\nexport function initializeDevtoolsRegistry(): DbDevtoolsRegistry {\n  if (!window.__TANSTACK_DB_DEVTOOLS__) {\n    window.__TANSTACK_DB_DEVTOOLS__ = createDbDevtoolsRegistry()\n  }\n  return window.__TANSTACK_DB_DEVTOOLS__\n}\n","/** @jsxImportSource solid-js */\nimport { For, Show, createEffect, createSignal, onCleanup } from \"solid-js\"\nimport type { DbDevtoolsRegistry } from \"../types\"\n\ninterface CollectionDetailsProps {\n  collectionId: string\n  registry: DbDevtoolsRegistry\n}\n\nexport function CollectionDetails(props: CollectionDetailsProps) {\n  const [collectionData, setCollectionData] = createSignal<Array<any>>([])\n  const [isLoading, setIsLoading] = createSignal(false)\n  const [error, setError] = createSignal<string | null>(null)\n\n  let unsubscribe: (() => void) | undefined\n\n  createEffect(() => {\n    const collectionId = props.collectionId\n    if (!collectionId) return\n\n    setIsLoading(true)\n    setError(null)\n\n    // Get the collection (creates hard reference)\n    const collection = props.registry.getCollection(collectionId)\n    if (!collection) {\n      setError(`Collection not found`)\n      setIsLoading(false)\n      return\n    }\n\n    // Subscribe to collection changes\n    unsubscribe = collection.subscribeChanges(\n      (_changes) => {\n        // Update the local state with fresh data\n        setCollectionData(Array.from(collection.values()))\n      },\n      { includeInitialState: true }\n    )\n\n    setIsLoading(false)\n\n    // Cleanup: release hard reference and unsubscribe\n    onCleanup(() => {\n      if (unsubscribe) {\n        unsubscribe()\n        unsubscribe = undefined\n      }\n      props.registry.releaseCollection(collectionId)\n    })\n  })\n\n  const metadata = () =>\n    props.registry.getCollectionMetadata(props.collectionId)\n\n  return (\n    <div style={{ padding: `20px`, overflow: `auto`, height: `100%` }}>\n      <Show\n        when={error()}\n        fallback={\n          <Show\n            when={!isLoading()}\n            fallback={\n              <div\n                style={{\n                  display: `flex`,\n                  \"align-items\": `center`,\n                  \"justify-content\": `center`,\n                  height: `200px`,\n                }}\n              >\n                <div style={{ color: `#666` }}>\n                  Loading collection details...\n                </div>\n              </div>\n            }\n          >\n            <div>\n              <div\n                style={{\n                  display: `flex`,\n                  \"align-items\": `center`,\n                  \"justify-content\": `space-between`,\n                  \"margin-bottom\": `20px`,\n                  \"padding-bottom\": `16px`,\n                  \"border-bottom\": `1px solid #333`,\n                }}\n              >\n                <h2\n                  style={{ margin: `0`, \"font-size\": `20px`, color: `#e1e1e1` }}\n                >\n                  {metadata()?.type === `live-query` ? `🔄` : `📄`}\n                  {` `}\n                  {props.collectionId}\n                </h2>\n                <div\n                  style={{\n                    display: `flex`,\n                    \"align-items\": `center`,\n                    gap: `12px`,\n                    \"font-size\": `14px`,\n                    color: `#888`,\n                  }}\n                >\n                  <span>Status: {metadata()?.status}</span>\n                  <span>•</span>\n                  <span>{collectionData().length} items</span>\n                </div>\n              </div>\n\n              {/* Metadata Section */}\n              <Show when={metadata()}>\n                <div style={{ \"margin-bottom\": `24px` }}>\n                  <h3\n                    style={{\n                      margin: `0 0 12px 0`,\n                      \"font-size\": `16px`,\n                      color: `#e1e1e1`,\n                    }}\n                  >\n                    Metadata\n                  </h3>\n                  <div\n                    style={{\n                      display: `grid`,\n                      \"grid-template-columns\": `repeat(auto-fit, minmax(200px, 1fr))`,\n                      gap: `12px`,\n                      \"font-size\": `14px`,\n                    }}\n                  >\n                    <div>\n                      <strong>Type:</strong> {metadata()!.type}\n                    </div>\n                    <div>\n                      <strong>Created:</strong>\n                      {` `}\n                      {metadata()!.createdAt.toLocaleString()}\n                    </div>\n                    <div>\n                      <strong>Last Updated:</strong>\n                      {` `}\n                      {metadata()!.lastUpdated.toLocaleString()}\n                    </div>\n                    <div>\n                      <strong>GC Time:</strong>\n                      {` `}\n                      {metadata()!.gcTime || `Default`}ms\n                    </div>\n                    <Show when={metadata()!.hasTransactions}>\n                      <div>\n                        <strong>Transactions:</strong>\n                        {` `}\n                        {metadata()!.transactionCount}\n                      </div>\n                    </Show>\n                  </div>\n\n                  {/* Live Query Timings */}\n                  <Show\n                    when={\n                      metadata()!.type === `live-query` && metadata()!.timings\n                    }\n                  >\n                    <div style={{ \"margin-top\": `16px` }}>\n                      <h4\n                        style={{\n                          margin: `0 0 8px 0`,\n                          \"font-size\": `14px`,\n                          color: `#e1e1e1`,\n                        }}\n                      >\n                        Performance Metrics\n                      </h4>\n                      <div\n                        style={{\n                          display: `grid`,\n                          \"grid-template-columns\": `repeat(auto-fit, minmax(200px, 1fr))`,\n                          gap: `12px`,\n                          \"font-size\": `14px`,\n                        }}\n                      >\n                        <Show when={metadata()!.timings!.initialRunTime}>\n                          <div>\n                            <strong>Initial Run:</strong>\n                            {` `}\n                            {metadata()!.timings!.initialRunTime}ms\n                          </div>\n                        </Show>\n                        <div>\n                          <strong>Total Runs:</strong>\n                          {` `}\n                          {metadata()!.timings!.totalIncrementalRuns}\n                        </div>\n                        <Show\n                          when={metadata()!.timings!.averageIncrementalRunTime}\n                        >\n                          <div>\n                            <strong>Avg Incremental:</strong>\n                            {` `}\n                            {metadata()!.timings!.averageIncrementalRunTime}ms\n                          </div>\n                        </Show>\n                        <Show\n                          when={metadata()!.timings!.lastIncrementalRunTime}\n                        >\n                          <div>\n                            <strong>Last Run:</strong>\n                            {` `}\n                            {metadata()!.timings!.lastIncrementalRunTime}ms\n                          </div>\n                        </Show>\n                      </div>\n                    </div>\n                  </Show>\n                </div>\n              </Show>\n\n              {/* Data Section */}\n              <div>\n                <h3\n                  style={{\n                    margin: `0 0 16px 0`,\n                    \"font-size\": `16px`,\n                    color: `#e1e1e1`,\n                  }}\n                >\n                  Data ({collectionData().length} items)\n                </h3>\n\n                <Show\n                  when={collectionData().length === 0}\n                  fallback={\n                    <div\n                      style={{\n                        \"max-height\": `400px`,\n                        overflow: `auto`,\n                        border: `1px solid #333`,\n                        \"border-radius\": `4px`,\n                      }}\n                    >\n                      <For each={collectionData()}>\n                        {(item, index) => (\n                          <div\n                            style={{\n                              padding: `12px`,\n                              \"border-bottom\":\n                                index() < collectionData().length - 1\n                                  ? `1px solid #333`\n                                  : `none`,\n                              \"background-color\":\n                                index() % 2 === 0 ? `#222` : `#1a1a1a`,\n                            }}\n                          >\n                            <details>\n                              <summary\n                                style={{\n                                  cursor: `pointer`,\n                                  \"font-weight\": `500`,\n                                  color: `#e1e1e1`,\n                                  \"margin-bottom\": `8px`,\n                                }}\n                              >\n                                Item {index() + 1}\n                              </summary>\n                              <pre\n                                style={{\n                                  \"font-size\": `12px`,\n                                  \"line-height\": `1.4`,\n                                  color: `#ccc`,\n                                  margin: `0`,\n                                  \"white-space\": `pre-wrap`,\n                                  \"word-break\": `break-word`,\n                                }}\n                              >\n                                {JSON.stringify(item, null, 2)}\n                              </pre>\n                            </details>\n                          </div>\n                        )}\n                      </For>\n                    </div>\n                  }\n                >\n                  <div\n                    style={{\n                      padding: `40px 20px`,\n                      \"text-align\": `center`,\n                      color: `#666`,\n                      \"font-style\": `italic`,\n                      border: `1px solid #333`,\n                      \"border-radius\": `4px`,\n                      \"background-color\": `#1a1a1a`,\n                    }}\n                  >\n                    No data in collection\n                  </div>\n                </Show>\n              </div>\n            </div>\n          </Show>\n        }\n      >\n        <div\n          style={{\n            display: `flex`,\n            \"align-items\": `center`,\n            \"justify-content\": `center`,\n            height: `200px`,\n            color: `#ef4444`,\n          }}\n        >\n          {error()}\n        </div>\n      </Show>\n    </div>\n  )\n}\n","/** @jsxImportSource solid-js */\nimport { For, Show } from \"solid-js\"\nimport type { TransactionDetails } from \"../types\"\n\ninterface TransactionListProps {\n  transactions: Array<TransactionDetails>\n  selectedTransaction: string | null\n  onTransactionSelect: (id: string) => void\n}\n\nexport function TransactionList(props: TransactionListProps) {\n  const getStateColor = (state: string) => {\n    switch (state) {\n      case `completed`:\n        return `#22c55e`\n      case `failed`:\n        return `#ef4444`\n      case `persisting`:\n        return `#eab308`\n      case `pending`:\n        return `#3b82f6`\n      default:\n        return `#6b7280`\n    }\n  }\n\n  const getStateIcon = (state: string) => {\n    switch (state) {\n      case `completed`:\n        return `✓`\n      case `failed`:\n        return `✗`\n      case `persisting`:\n        return `⟳`\n      case `pending`:\n        return `○`\n      default:\n        return `?`\n    }\n  }\n\n  return (\n    <div style={{ overflow: `auto`, height: `100%` }}>\n      <Show\n        when={props.transactions.length === 0}\n        fallback={\n          <For each={props.transactions}>\n            {(transaction) => (\n              <div\n                onClick={() => props.onTransactionSelect(transaction.id)}\n                style={{\n                  padding: `12px 16px`,\n                  \"border-bottom\": `1px solid #333`,\n                  cursor: `pointer`,\n                  \"background-color\":\n                    props.selectedTransaction === transaction.id\n                      ? `#0088ff20`\n                      : `transparent`,\n                  \"border-left\":\n                    props.selectedTransaction === transaction.id\n                      ? `3px solid #0088ff`\n                      : `3px solid transparent`,\n                }}\n              >\n                <div\n                  style={{\n                    display: `flex`,\n                    \"align-items\": `center`,\n                    \"justify-content\": `space-between`,\n                    \"margin-bottom\": `4px`,\n                  }}\n                >\n                  <div\n                    style={{\n                      \"font-weight\": `500`,\n                      \"font-size\": `14px`,\n                      color: `#e1e1e1`,\n                    }}\n                  >\n                    {transaction.id.slice(0, 8)}...\n                  </div>\n                  <div\n                    style={{\n                      display: `flex`,\n                      \"align-items\": `center`,\n                      gap: `4px`,\n                      color: getStateColor(transaction.state),\n                    }}\n                  >\n                    <span style={{ \"font-size\": `12px` }}>\n                      {getStateIcon(transaction.state)}\n                    </span>\n                    <span\n                      style={{\n                        \"font-size\": `12px`,\n                        \"text-transform\": `capitalize`,\n                      }}\n                    >\n                      {transaction.state}\n                    </span>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    \"font-size\": `12px`,\n                    color: `#888`,\n                    display: `flex`,\n                    \"justify-content\": `space-between`,\n                    \"align-items\": `center`,\n                  }}\n                >\n                  <span>{transaction.collectionId}</span>\n                  <span>{transaction.mutations.length} mutations</span>\n                </div>\n                <div\n                  style={{\n                    \"font-size\": `11px`,\n                    color: `#666`,\n                    \"margin-top\": `4px`,\n                  }}\n                >\n                  {new Date(transaction.createdAt).toLocaleString()}\n                </div>\n              </div>\n            )}\n          </For>\n        }\n      >\n        <div\n          style={{\n            padding: `40px 20px`,\n            \"text-align\": `center`,\n            color: `#666`,\n            \"font-style\": `italic`,\n          }}\n        >\n          No transactions found\n        </div>\n      </Show>\n    </div>\n  )\n}\n","/** @jsxImportSource solid-js */\nimport { For, Show, createMemo, createSignal } from \"solid-js\"\nimport { CollectionDetails } from \"./components/CollectionDetails\"\nimport { TransactionList } from \"./components/TransactionList\"\nimport type {\n  CollectionMetadata,\n  DbDevtoolsRegistry,\n  TransactionDetails,\n} from \"./types\"\n\ninterface DbDevtoolsPanelProps {\n  onClose: () => void\n  collections: Array<CollectionMetadata>\n  registry: DbDevtoolsRegistry\n  [key: string]: any\n}\n\nexport function DbDevtoolsPanel(props: DbDevtoolsPanelProps) {\n  const [selectedView, setSelectedView] = createSignal<\n    `collections` | `transactions`\n  >(`collections`)\n  const [selectedCollection, setSelectedCollection] = createSignal<\n    string | null\n  >(null)\n  const [selectedTransaction, setSelectedTransaction] = createSignal<\n    string | null\n  >(null)\n\n  const liveQueries = createMemo(() =>\n    props.collections.filter((c) => c.type === `live-query`)\n  )\n\n  const regularCollections = createMemo(() =>\n    props.collections.filter((c) => c.type === `collection`)\n  )\n\n  const allTransactions = createMemo(() => props.registry.getTransactions())\n\n  const handleCollectionSelect = (id: string) => {\n    setSelectedCollection(id)\n    setSelectedTransaction(null)\n  }\n\n  const handleTransactionSelect = (id: string) => {\n    setSelectedTransaction(id)\n    setSelectedCollection(null)\n  }\n\n  const panelStyle = {\n    position: `fixed` as const,\n    top: `0`,\n    left: `0`,\n    width: `100vw`,\n    height: `100vh`,\n    \"z-index\": 9999999,\n    \"background-color\": `rgba(0, 0, 0, 0.5)`,\n    display: `flex`,\n    \"align-items\": `center`,\n    \"justify-content\": `center`,\n    \"font-family\": `system-ui, -apple-system, sans-serif`,\n  }\n\n  const contentStyle = {\n    \"background-color\": `#1a1a1a`,\n    color: `#e1e1e1`,\n    width: `90vw`,\n    height: `90vh`,\n    \"border-radius\": `12px`,\n    \"box-shadow\": `0 20px 40px rgba(0, 0, 0, 0.3)`,\n    display: `flex`,\n    \"flex-direction\": `column` as const,\n    overflow: `hidden`,\n  }\n\n  const headerStyle = {\n    display: `flex`,\n    \"align-items\": `center`,\n    \"justify-content\": `space-between`,\n    padding: `16px 20px`,\n    \"border-bottom\": `1px solid #333`,\n    \"background-color\": `#222`,\n  }\n\n  const bodyStyle = {\n    display: `flex`,\n    flex: `1`,\n    overflow: `hidden`,\n  }\n\n  const sidebarStyle = {\n    width: `300px`,\n    \"border-right\": `1px solid #333`,\n    \"background-color\": `#1e1e1e`,\n    display: `flex`,\n    \"flex-direction\": `column` as const,\n  }\n\n  const mainStyle = {\n    flex: `1`,\n    display: `flex`,\n    \"flex-direction\": `column` as const,\n    overflow: `hidden`,\n  }\n\n  return (\n    <div\n      style={panelStyle}\n      onClick={(e) => e.target === e.currentTarget && props.onClose()}\n    >\n      <div style={contentStyle} onClick={(e) => e.stopPropagation()}>\n        {/* Header */}\n        <div style={headerStyle}>\n          <div\n            style={{ display: `flex`, \"align-items\": `center`, gap: `12px` }}\n          >\n            <span style={{ \"font-size\": `20px` }}>🗄️</span>\n            <h1\n              style={{ margin: `0`, \"font-size\": `18px`, \"font-weight\": `600` }}\n            >\n              TanStack DB Devtools\n            </h1>\n          </div>\n          <button\n            onClick={props.onClose}\n            style={{\n              background: `none`,\n              border: `none`,\n              color: `#888`,\n              \"font-size\": `20px`,\n              cursor: `pointer`,\n              padding: `4px 8px`,\n              \"border-radius\": `4px`,\n            }}\n          >\n            ✕\n          </button>\n        </div>\n\n        <div style={bodyStyle}>\n          {/* Sidebar */}\n          <div style={sidebarStyle}>\n            {/* Tab Navigation */}\n            <div\n              style={{\n                display: `flex`,\n                \"border-bottom\": `1px solid #333`,\n                \"background-color\": `#222`,\n              }}\n            >\n              <button\n                onClick={() => setSelectedView(`collections`)}\n                style={{\n                  flex: `1`,\n                  padding: `12px`,\n                  background:\n                    selectedView() === `collections`\n                      ? `#0088ff`\n                      : `transparent`,\n                  border: `none`,\n                  color: selectedView() === `collections` ? `white` : `#888`,\n                  cursor: `pointer`,\n                  \"font-size\": `14px`,\n                }}\n              >\n                Collections\n              </button>\n              <button\n                onClick={() => setSelectedView(`transactions`)}\n                style={{\n                  flex: `1`,\n                  padding: `12px`,\n                  background:\n                    selectedView() === `transactions`\n                      ? `#0088ff`\n                      : `transparent`,\n                  border: `none`,\n                  color: selectedView() === `transactions` ? `white` : `#888`,\n                  cursor: `pointer`,\n                  \"font-size\": `14px`,\n                }}\n              >\n                Transactions ({allTransactions().length})\n              </button>\n            </div>\n\n            {/* Content based on selected view */}\n            <div style={{ flex: `1`, overflow: `auto` }}>\n              <Show when={selectedView() === `collections`}>\n                {/* Live Queries Section */}\n                <Show when={liveQueries().length > 0}>\n                  <div style={{ padding: `16px 0 8px 16px` }}>\n                    <h3\n                      style={{\n                        margin: `0 0 8px 0`,\n                        \"font-size\": `14px`,\n                        \"font-weight\": `600`,\n                        color: `#888`,\n                        \"text-transform\": `uppercase`,\n                        \"letter-spacing\": `0.5px`,\n                      }}\n                    >\n                      Live Queries ({liveQueries().length})\n                    </h3>\n                  </div>\n                  <For each={liveQueries()}>\n                    {(collection) => (\n                      <CollectionItem\n                        collection={collection}\n                        isSelected={selectedCollection() === collection.id}\n                        onClick={() => handleCollectionSelect(collection.id)}\n                      />\n                    )}\n                  </For>\n                </Show>\n\n                {/* Regular Collections Section */}\n                <Show when={regularCollections().length > 0}>\n                  <div style={{ padding: `16px 0 8px 16px` }}>\n                    <h3\n                      style={{\n                        margin: `0 0 8px 0`,\n                        \"font-size\": `14px`,\n                        \"font-weight\": `600`,\n                        color: `#888`,\n                        \"text-transform\": `uppercase`,\n                        \"letter-spacing\": `0.5px`,\n                      }}\n                    >\n                      Collections ({regularCollections().length})\n                    </h3>\n                  </div>\n                  <For each={regularCollections()}>\n                    {(collection) => (\n                      <CollectionItem\n                        collection={collection}\n                        isSelected={selectedCollection() === collection.id}\n                        onClick={() => handleCollectionSelect(collection.id)}\n                      />\n                    )}\n                  </For>\n                </Show>\n\n                <Show when={props.collections.length === 0}>\n                  <div\n                    style={{\n                      padding: `40px 20px`,\n                      \"text-align\": `center`,\n                      color: `#666`,\n                      \"font-style\": `italic`,\n                    }}\n                  >\n                    No collections found. Create a collection to see it here.\n                  </div>\n                </Show>\n              </Show>\n\n              <Show when={selectedView() === `transactions`}>\n                <TransactionList\n                  transactions={allTransactions()}\n                  selectedTransaction={selectedTransaction()}\n                  onTransactionSelect={handleTransactionSelect}\n                />\n              </Show>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div style={mainStyle}>\n            <Show\n              when={selectedCollection()}\n              fallback={\n                <Show\n                  when={selectedTransaction()}\n                  fallback={\n                    <div\n                      style={{\n                        display: `flex`,\n                        \"align-items\": `center`,\n                        \"justify-content\": `center`,\n                        flex: `1`,\n                        color: `#666`,\n                        \"font-style\": `italic`,\n                      }}\n                    >\n                      {selectedView() === `collections`\n                        ? `Select a collection to view details`\n                        : `Select a transaction to view details`}\n                    </div>\n                  }\n                >\n                  <TransactionDetails\n                    transactionId={selectedTransaction()}\n                    registry={props.registry}\n                  />\n                </Show>\n              }\n            >\n              <CollectionDetails\n                collectionId={selectedCollection()}\n                registry={props.registry}\n              />\n            </Show>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Collection Item Component\nfunction CollectionItem(props: {\n  collection: CollectionMetadata\n  isSelected: boolean\n  onClick: () => void\n}) {\n  const statusColor = () => {\n    switch (props.collection.status) {\n      case `ready`:\n        return `#22c55e`\n      case `loading`:\n        return `#eab308`\n      case `error`:\n        return `#ef4444`\n      case `cleaned-up`:\n        return `#6b7280`\n      default:\n        return `#6b7280`\n    }\n  }\n\n  const statusIcon = () => {\n    switch (props.collection.status) {\n      case `ready`:\n        return `✓`\n      case `loading`:\n        return `⟳`\n      case `error`:\n        return `⚠`\n      case `cleaned-up`:\n        return `🗑`\n      default:\n        return `○`\n    }\n  }\n\n  return (\n    <div\n      onClick={props.onClick}\n      style={{\n        padding: `12px 16px`,\n        \"border-bottom\": `1px solid #333`,\n        cursor: `pointer`,\n        \"background-color\": props.isSelected ? `#0088ff20` : `transparent`,\n        \"border-left\": props.isSelected\n          ? `3px solid #0088ff`\n          : `3px solid transparent`,\n      }}\n    >\n      <div\n        style={{\n          display: `flex`,\n          \"align-items\": `center`,\n          \"justify-content\": `space-between`,\n          \"margin-bottom\": `4px`,\n        }}\n      >\n        <div\n          style={{\n            \"font-weight\": `500`,\n            \"font-size\": `14px`,\n            color: `#e1e1e1`,\n          }}\n        >\n          {props.collection.type === `live-query` ? `🔄` : `📄`}\n          {` `}\n          {props.collection.id}\n        </div>\n        <div\n          style={{\n            display: `flex`,\n            \"align-items\": `center`,\n            gap: `4px`,\n            color: statusColor(),\n          }}\n        >\n          <span style={{ \"font-size\": `12px` }}>{statusIcon()}</span>\n        </div>\n      </div>\n      <div\n        style={{\n          \"font-size\": `12px`,\n          color: `#888`,\n          display: `flex`,\n          \"justify-content\": `space-between`,\n        }}\n      >\n        <span>{props.collection.size} items</span>\n        <Show when={props.collection.hasTransactions}>\n          <span>{props.collection.transactionCount} tx</span>\n        </Show>\n      </div>\n      <Show\n        when={\n          props.collection.timings && props.collection.type === `live-query`\n        }\n      >\n        <div\n          style={{\n            \"font-size\": `11px`,\n            color: `#666`,\n            \"margin-top\": `2px`,\n          }}\n        >\n          {props.collection.timings!.totalIncrementalRuns} runs\n          <Show when={props.collection.timings!.averageIncrementalRunTime}>\n            , avg {props.collection.timings!.averageIncrementalRunTime}ms\n          </Show>\n        </div>\n      </Show>\n    </div>\n  )\n}\n\n// Transaction Details Component\nfunction TransactionDetails(props: {\n  transactionId: string\n  registry: DbDevtoolsRegistry\n}) {\n  const transaction = () => props.registry.getTransaction(props.transactionId)\n\n  return (\n    <div style={{ padding: `20px`, overflow: `auto` }}>\n      <Show when={transaction()} fallback={<div>Transaction not found</div>}>\n        {(tx) => (\n          <div>\n            <h2 style={{ margin: `0 0 16px 0`, \"font-size\": `18px` }}>\n              Transaction {tx().id}\n            </h2>\n            <div style={{ \"margin-bottom\": `20px` }}>\n              <div>\n                <strong>Collection:</strong> {tx().collectionId}\n              </div>\n              <div>\n                <strong>State:</strong> {tx().state}\n              </div>\n              <div>\n                <strong>Created:</strong> {tx().createdAt.toLocaleString()}\n              </div>\n              <div>\n                <strong>Updated:</strong> {tx().updatedAt.toLocaleString()}\n              </div>\n              <div>\n                <strong>Persisted:</strong> {tx().isPersisted ? `Yes` : `No`}\n              </div>\n            </div>\n            <h3>Mutations ({tx().mutations.length})</h3>\n            <For each={tx().mutations}>\n              {(mutation) => (\n                <div\n                  style={{\n                    \"margin-bottom\": `12px`,\n                    padding: `12px`,\n                    \"background-color\": `#333`,\n                    \"border-radius\": `4px`,\n                  }}\n                >\n                  <div>\n                    <strong>Type:</strong> {mutation.type}\n                  </div>\n                  <div>\n                    <strong>Key:</strong> {String(mutation.key)}\n                  </div>\n                  <div>\n                    <strong>Optimistic:</strong>\n                    {` `}\n                    {mutation.optimistic ? `Yes` : `No`}\n                  </div>\n                  <Show when={mutation.changes}>\n                    <details style={{ \"margin-top\": `8px` }}>\n                      <summary style={{ cursor: `pointer` }}>Changes</summary>\n                      <pre\n                        style={{\n                          \"margin-top\": `8px`,\n                          \"background-color\": `#222`,\n                          padding: `8px`,\n                          \"border-radius\": `4px`,\n                          \"font-size\": `12px`,\n                          overflow: `auto`,\n                        }}\n                      >\n                        {JSON.stringify(mutation.changes, null, 2)}\n                      </pre>\n                    </details>\n                  </Show>\n                </div>\n              )}\n            </For>\n          </div>\n        )}\n      </Show>\n    </div>\n  )\n}\n","/** @jsxImportSource solid-js */\nimport { createEffect, createSignal, onCleanup } from \"solid-js\"\nimport { DbDevtoolsPanel } from \"./DbDevtoolsPanel\"\nimport { initializeDevtoolsRegistry } from \"./registry\"\nimport type { CollectionMetadata, DbDevtoolsConfig } from \"./types\"\n\ninterface DbDevtoolsProps extends DbDevtoolsConfig {\n  // Additional component props\n  registry?: import('./types').DbDevtoolsRegistry\n  shadowDOMTarget?: ShadowRoot\n}\n\nfunction DbDevtools(props: DbDevtoolsProps = {}) {\n  const [isOpen, setIsOpen] = createSignal(props.initialIsOpen ?? false)\n  const [collections, setCollections] = createSignal<Array<CollectionMetadata>>(\n    []\n  )\n\n  const registry = props.registry || initializeDevtoolsRegistry()\n\n  let intervalId: number | undefined\n\n  // Update collections metadata periodically\n  createEffect(() => {\n    const updateCollections = () => {\n      const metadata = registry.getAllCollectionMetadata()\n      setCollections(metadata)\n    }\n\n    // Initial load\n    updateCollections()\n\n    // Set up polling\n    intervalId = window.setInterval(updateCollections, 1000)\n\n    onCleanup(() => {\n      if (intervalId) {\n        clearInterval(intervalId)\n      }\n    })\n  })\n\n  const toggleOpen = () => {\n    const newState = !isOpen()\n    setIsOpen(newState)\n    props.onPanelStateChange?.(newState)\n  }\n\n  // Handle controlled state\n  createEffect(() => {\n    if (props.panelState) {\n      setIsOpen(props.panelState === `open`)\n    }\n  })\n\n  const position = props.position ?? `bottom-right`\n\n  return (\n    <>\n      {/* Toggle Button */}\n      <div\n        style={{\n          position: position === `relative` ? `relative` : `fixed`,\n          ...(position.includes(`top`) ? { top: `12px` } : { bottom: `12px` }),\n          ...(position.includes(`left`) ? { left: `12px` } : { right: `12px` }),\n          \"z-index\": 999999,\n        }}\n      >\n        <button\n          type=\"button\"\n          onClick={toggleOpen}\n          style={{\n            display: `flex`,\n            \"align-items\": `center`,\n            \"justify-content\": `center`,\n            \"background-color\": `#0088ff`,\n            border: `none`,\n            \"border-radius\": `8px`,\n            padding: `8px 12px`,\n            color: `white`,\n            \"font-family\": `system-ui, sans-serif`,\n            \"font-size\": `14px`,\n            \"font-weight\": `600`,\n            cursor: `pointer`,\n            \"box-shadow\": `0 4px 12px rgba(0, 136, 255, 0.3)`,\n            transition: `all 0.2s ease`,\n            ...props.toggleButtonProps?.style,\n          }}\n          {...props.toggleButtonProps}\n        >\n          <span style={{ \"margin-right\": `8px` }}>🗄️</span>\n          DB ({collections().length})\n        </button>\n      </div>\n\n      {/* Panel */}\n      {isOpen() && (\n        <DbDevtoolsPanel\n          onClose={() => setIsOpen(false)}\n          collections={collections()}\n          registry={registry}\n          {...props.panelProps}\n        />\n      )}\n    </>\n  )\n}\n\nexport default DbDevtools\n","// New implementation exports (temporarily commented out until dependencies are installed)\n// export * from './Devtools'\n// export * from './contexts'\nexport * from './theme'\nexport * from './constants'\n// export * from './utils'\n// export * from './icons'\nexport * from './types'\n\n// Legacy exports for backwards compatibility\n// export * from \"./devtools\"\nexport * from \"./registry\"\n\n// Main Devtools Class (follows TanStack pattern)\nexport { TanstackDbDevtools } from \"./TanstackDbDevtools\"\nexport type { TanstackDbDevtoolsConfig } from \"./TanstackDbDevtools\"\n\n// SolidJS Components (for direct SolidJS usage)\nexport { default as DbDevtools } from \"./DbDevtools\"\nexport { DbDevtoolsPanel } from \"./DbDevtoolsPanel\"\n","export const tokens = {\n  colors: {\n    inherit: 'inherit',\n    current: 'currentColor',\n    transparent: 'transparent',\n    black: '#000000',\n    white: '#ffffff',\n    neutral: {\n      50: '#f9fafb',\n      100: '#f2f4f7',\n      200: '#eaecf0',\n      300: '#d0d5dd',\n      400: '#98a2b3',\n      500: '#667085',\n      600: '#475467',\n      700: '#344054',\n      800: '#1d2939',\n      900: '#101828',\n    },\n    darkGray: {\n      50: '#525c7a',\n      100: '#49536e',\n      200: '#414962',\n      300: '#394056',\n      400: '#313749',\n      500: '#292e3d',\n      600: '#212530',\n      700: '#191c24',\n      800: '#111318',\n      900: '#0b0d10',\n    },\n    gray: {\n      50: '#f9fafb',\n      100: '#f2f4f7',\n      200: '#eaecf0',\n      300: '#d0d5dd',\n      400: '#98a2b3',\n      500: '#667085',\n      600: '#475467',\n      700: '#344054',\n      800: '#1d2939',\n      900: '#101828',\n    },\n    blue: {\n      25: '#F5FAFF',\n      50: '#EFF8FF',\n      100: '#D1E9FF',\n      200: '#B2DDFF',\n      300: '#84CAFF',\n      400: '#53B1FD',\n      500: '#2E90FA',\n      600: '#1570EF',\n      700: '#175CD3',\n      800: '#1849A9',\n      900: '#194185',\n    },\n    green: {\n      25: '#F6FEF9',\n      50: '#ECFDF3',\n      100: '#D1FADF',\n      200: '#A6F4C5',\n      300: '#6CE9A6',\n      400: '#32D583',\n      500: '#12B76A',\n      600: '#039855',\n      700: '#027A48',\n      800: '#05603A',\n      900: '#054F31',\n    },\n    red: {\n      50: '#fef2f2',\n      100: '#fee2e2',\n      200: '#fecaca',\n      300: '#fca5a5',\n      400: '#f87171',\n      500: '#ef4444',\n      600: '#dc2626',\n      700: '#b91c1c',\n      800: '#991b1b',\n      900: '#7f1d1d',\n      950: '#450a0a',\n    },\n    yellow: {\n      25: '#FFFCF5',\n      50: '#FFFAEB',\n      100: '#FEF0C7',\n      200: '#FEDF89',\n      300: '#FEC84B',\n      400: '#FDB022',\n      500: '#F79009',\n      600: '#DC6803',\n      700: '#B54708',\n      800: '#93370D',\n      900: '#7A2E0E',\n    },\n    purple: {\n      25: '#FAFAFF',\n      50: '#F4F3FF',\n      100: '#EBE9FE',\n      200: '#D9D6FE',\n      300: '#BDB4FE',\n      400: '#9B8AFB',\n      500: '#7A5AF8',\n      600: '#6938EF',\n      700: '#5925DC',\n      800: '#4A1FB8',\n      900: '#3E1C96',\n    },\n    teal: {\n      25: '#F6FEFC',\n      50: '#F0FDF9',\n      100: '#CCFBEF',\n      200: '#99F6E0',\n      300: '#5FE9D0',\n      400: '#2ED3B7',\n      500: '#15B79E',\n      600: '#0E9384',\n      700: '#107569',\n      800: '#125D56',\n      900: '#134E48',\n    },\n    pink: {\n      25: '#fdf2f8',\n      50: '#fce7f3',\n      100: '#fbcfe8',\n      200: '#f9a8d4',\n      300: '#f472b6',\n      400: '#ec4899',\n      500: '#db2777',\n      600: '#be185d',\n      700: '#9d174d',\n      800: '#831843',\n      900: '#500724',\n    },\n    cyan: {\n      25: '#ecfeff',\n      50: '#cffafe',\n      100: '#a5f3fc',\n      200: '#67e8f9',\n      300: '#22d3ee',\n      400: '#06b6d4',\n      500: '#0891b2',\n      600: '#0e7490',\n      700: '#155e75',\n      800: '#164e63',\n      900: '#083344',\n    },\n  },\n  alpha: {\n    100: 'ff',\n    90: 'e5',\n    80: 'cc',\n    70: 'b3',\n    60: '99',\n    50: '80',\n    40: '66',\n    30: '4d',\n    20: '33',\n    10: '1a',\n    0: '00',\n  },\n  font: {\n    size: {\n      '2xs': 'calc(var(--tsdb-font-size) * 0.625)',\n      xs: 'calc(var(--tsdb-font-size) * 0.75)',\n      sm: 'calc(var(--tsdb-font-size) * 0.875)',\n      md: 'var(--tsdb-font-size)',\n      lg: 'calc(var(--tsdb-font-size) * 1.125)',\n      xl: 'calc(var(--tsdb-font-size) * 1.25)',\n      '2xl': 'calc(var(--tsdb-font-size) * 1.5)',\n      '3xl': 'calc(var(--tsdb-font-size) * 1.875)',\n      '4xl': 'calc(var(--tsdb-font-size) * 2.25)',\n      '5xl': 'calc(var(--tsdb-font-size) * 3)',\n      '6xl': 'calc(var(--tsdb-font-size) * 3.75)',\n      '7xl': 'calc(var(--tsdb-font-size) * 4.5)',\n      '8xl': 'calc(var(--tsdb-font-size) * 6)',\n      '9xl': 'calc(var(--tsdb-font-size) * 8)',\n    },\n    lineHeight: {\n      xs: 'calc(var(--tsdb-font-size) * 1)',\n      sm: 'calc(var(--tsdb-font-size) * 1.25)',\n      md: 'calc(var(--tsdb-font-size) * 1.5)',\n      lg: 'calc(var(--tsdb-font-size) * 1.75)',\n      xl: 'calc(var(--tsdb-font-size) * 2)',\n      '2xl': 'calc(var(--tsdb-font-size) * 2.25)',\n      '3xl': 'calc(var(--tsdb-font-size) * 2.5)',\n      '4xl': 'calc(var(--tsdb-font-size) * 2.75)',\n      '5xl': 'calc(var(--tsdb-font-size) * 3)',\n      '6xl': 'calc(var(--tsdb-font-size) * 3.25)',\n      '7xl': 'calc(var(--tsdb-font-size) * 3.5)',\n      '8xl': 'calc(var(--tsdb-font-size) * 3.75)',\n      '9xl': 'calc(var(--tsdb-font-size) * 4)',\n    },\n    weight: {\n      thin: '100',\n      extralight: '200',\n      light: '300',\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n      extrabold: '800',\n      black: '900',\n    },\n  },\n  breakpoints: {\n    xs: '320px',\n    sm: '640px',\n    md: '768px',\n    lg: '1024px',\n    xl: '1280px',\n    '2xl': '1536px',\n  },\n  border: {\n    radius: {\n      none: '0px',\n      xs: 'calc(var(--tsdb-font-size) * 0.125)',\n      sm: 'calc(var(--tsdb-font-size) * 0.25)',\n      md: 'calc(var(--tsdb-font-size) * 0.375)',\n      lg: 'calc(var(--tsdb-font-size) * 0.5)',\n      xl: 'calc(var(--tsdb-font-size) * 0.75)',\n      '2xl': 'calc(var(--tsdb-font-size) * 1)',\n      '3xl': 'calc(var(--tsdb-font-size) * 1.5)',\n      full: '9999px',\n    },\n  },\n  size: {\n    0: '0px',\n    0.25: 'calc(var(--tsdb-font-size) * 0.0625)',\n    0.5: 'calc(var(--tsdb-font-size) * 0.125)',\n    1: 'calc(var(--tsdb-font-size) * 0.25)',\n    1.5: 'calc(var(--tsdb-font-size) * 0.375)',\n    2: 'calc(var(--tsdb-font-size) * 0.5)',\n    2.5: 'calc(var(--tsdb-font-size) * 0.625)',\n    3: 'calc(var(--tsdb-font-size) * 0.75)',\n    3.5: 'calc(var(--tsdb-font-size) * 0.875)',\n    4: 'calc(var(--tsdb-font-size) * 1)',\n    4.5: 'calc(var(--tsdb-font-size) * 1.125)',\n    5: 'calc(var(--tsdb-font-size) * 1.25)',\n    5.5: 'calc(var(--tsdb-font-size) * 1.375)',\n    6: 'calc(var(--tsdb-font-size) * 1.5)',\n    6.5: 'calc(var(--tsdb-font-size) * 1.625)',\n    7: 'calc(var(--tsdb-font-size) * 1.75)',\n    8: 'calc(var(--tsdb-font-size) * 2)',\n    9: 'calc(var(--tsdb-font-size) * 2.25)',\n    10: 'calc(var(--tsdb-font-size) * 2.5)',\n    11: 'calc(var(--tsdb-font-size) * 2.75)',\n    12: 'calc(var(--tsdb-font-size) * 3)',\n    14: 'calc(var(--tsdb-font-size) * 3.5)',\n    16: 'calc(var(--tsdb-font-size) * 4)',\n    20: 'calc(var(--tsdb-font-size) * 5)',\n    24: 'calc(var(--tsdb-font-size) * 6)',\n    28: 'calc(var(--tsdb-font-size) * 7)',\n    32: 'calc(var(--tsdb-font-size) * 8)',\n    36: 'calc(var(--tsdb-font-size) * 9)',\n    40: 'calc(var(--tsdb-font-size) * 10)',\n    44: 'calc(var(--tsdb-font-size) * 11)',\n    48: 'calc(var(--tsdb-font-size) * 12)',\n    52: 'calc(var(--tsdb-font-size) * 13)',\n    56: 'calc(var(--tsdb-font-size) * 14)',\n    60: 'calc(var(--tsdb-font-size) * 15)',\n    64: 'calc(var(--tsdb-font-size) * 16)',\n    72: 'calc(var(--tsdb-font-size) * 18)',\n    80: 'calc(var(--tsdb-font-size) * 20)',\n    96: 'calc(var(--tsdb-font-size) * 24)',\n  },\n  shadow: {\n    xs: (_: string = 'rgb(0 0 0 / 0.1)') =>\n      `0 1px 2px 0 rgb(0 0 0 / 0.05)` as const,\n    sm: (color: string = 'rgb(0 0 0 / 0.1)') =>\n      `0 1px 3px 0 ${color}, 0 1px 2px -1px ${color}` as const,\n    md: (color: string = 'rgb(0 0 0 / 0.1)') =>\n      `0 4px 6px -1px ${color}, 0 2px 4px -2px ${color}` as const,\n    lg: (color: string = 'rgb(0 0 0 / 0.1)') =>\n      `0 10px 15px -3px ${color}, 0 4px 6px -4px ${color}` as const,\n    xl: (color: string = 'rgb(0 0 0 / 0.1)') =>\n      `0 20px 25px -5px ${color}, 0 8px 10px -6px ${color}` as const,\n    '2xl': (color: string = 'rgb(0 0 0 / 0.25)') =>\n      `0 25px 50px -12px ${color}` as const,\n    inner: (color: string = 'rgb(0 0 0 / 0.05)') =>\n      `inset 0 2px 4px 0 ${color}` as const,\n    none: () => `none` as const,\n  },\n  zIndices: {\n    hide: -1,\n    auto: 'auto',\n    base: 0,\n    docked: 10,\n    dropdown: 1000,\n    sticky: 1100,\n    banner: 1200,\n    overlay: 1300,\n    modal: 1400,\n    popover: 1500,\n    skipLink: 1600,\n    toast: 1700,\n    tooltip: 1800,\n  },\n} as const","export const DEFAULT_HEIGHT = 500\nexport const DEFAULT_WIDTH = 500\nexport const POSITION = 'bottom-right'\nexport const BUTTON_POSITION = 'bottom-right'\nexport const INITIAL_IS_OPEN = false\nexport const DEFAULT_SORT_ORDER = 1\nexport const DEFAULT_SORT_FN_NAME = 'Status > Last Updated'\nexport const DEFAULT_MUTATION_SORT_FN_NAME = 'Status > Last Updated'\n\nexport const firstBreakpoint = 1024\nexport const secondBreakpoint = 796\nexport const thirdBreakpoint = 700\n\nexport type DevtoolsPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'top' | 'bottom' | 'left' | 'right'\nexport type DevtoolsButtonPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'relative'\n\nexport const isServer = typeof window === 'undefined'","/** @jsxImportSource solid-js */\nimport { render } from \"solid-js/web\"\nimport { createSignal, lazy } from \"solid-js\"\nimport { initializeDevtoolsRegistry } from \"./registry\"\nimport type { DbDevtoolsConfig, CollectionMetadata } from \"./types\"\nimport type { DbDevtoolsRegistry } from \"./types\"\nimport type { Signal } from \"solid-js\"\n\nexport interface TanstackDbDevtoolsConfig extends DbDevtoolsConfig {\n  styleNonce?: string\n  shadowDOMTarget?: ShadowRoot\n}\n\nclass TanstackDbDevtools {\n  #registry: DbDevtoolsRegistry\n  #isMounted = false\n  #styleNonce?: string\n  #shadowDOMTarget?: ShadowRoot\n  #initialIsOpen: Signal<boolean | undefined>\n  #position: Signal<DbDevtoolsConfig[\"position\"] | undefined>\n  #panelProps: Signal<Record<string, any> | undefined>\n  #toggleButtonProps: Signal<Record<string, any> | undefined>\n  #closeButtonProps: Signal<Record<string, any> | undefined>\n  #storageKey: Signal<string | undefined>\n  #panelState: Signal<DbDevtoolsConfig[\"panelState\"] | undefined>\n  #onPanelStateChange: Signal<((isOpen: boolean) => void) | undefined>\n  #Component: any\n  #dispose?: () => void\n\n  constructor(config: TanstackDbDevtoolsConfig) {\n    const {\n      initialIsOpen,\n      position,\n      panelProps,\n      toggleButtonProps,\n      closeButtonProps,\n      storageKey,\n      panelState,\n      onPanelStateChange,\n      styleNonce,\n      shadowDOMTarget,\n    } = config\n\n    this.#registry = initializeDevtoolsRegistry()\n    this.#styleNonce = styleNonce\n    this.#shadowDOMTarget = shadowDOMTarget\n    this.#initialIsOpen = createSignal(initialIsOpen)\n    this.#position = createSignal(position)\n    this.#panelProps = createSignal(panelProps)\n    this.#toggleButtonProps = createSignal(toggleButtonProps)\n    this.#closeButtonProps = createSignal(closeButtonProps)\n    this.#storageKey = createSignal(storageKey)\n    this.#panelState = createSignal(panelState)\n    this.#onPanelStateChange = createSignal(onPanelStateChange)\n  }\n\n  setInitialIsOpen(isOpen: boolean) {\n    this.#initialIsOpen[1](isOpen)\n  }\n\n  setPosition(position: DbDevtoolsConfig[\"position\"]) {\n    this.#position[1](position)\n  }\n\n  setPanelProps(props: Record<string, any>) {\n    this.#panelProps[1](props)\n  }\n\n  setToggleButtonProps(props: Record<string, any>) {\n    this.#toggleButtonProps[1](props)\n  }\n\n  setCloseButtonProps(props: Record<string, any>) {\n    this.#closeButtonProps[1](props)\n  }\n\n  setStorageKey(key: string) {\n    this.#storageKey[1](key)\n  }\n\n  setPanelState(state: DbDevtoolsConfig[\"panelState\"]) {\n    this.#panelState[1](state)\n  }\n\n  setOnPanelStateChange(callback: (isOpen: boolean) => void) {\n    this.#onPanelStateChange[1](() => callback)\n  }\n\n  mount<T extends HTMLElement>(el: T) {\n    if (this.#isMounted) {\n      throw new Error(\"DB Devtools is already mounted\")\n    }\n\n    const dispose = render(() => {\n      const [initialIsOpen] = this.#initialIsOpen\n      const [position] = this.#position\n      const [panelProps] = this.#panelProps\n      const [toggleButtonProps] = this.#toggleButtonProps\n      const [closeButtonProps] = this.#closeButtonProps\n      const [storageKey] = this.#storageKey\n      const [panelState] = this.#panelState\n      const [onPanelStateChange] = this.#onPanelStateChange\n\n      let DbDevtools: any\n\n      if (this.#Component) {\n        DbDevtools = this.#Component\n      } else {\n        DbDevtools = lazy(() => import(\"./DbDevtools\"))\n        this.#Component = DbDevtools\n      }\n\n      return (\n        <DbDevtools\n          registry={this.#registry}\n          shadowDOMTarget={this.#shadowDOMTarget}\n          {...{\n            get initialIsOpen() {\n              return initialIsOpen()\n            },\n            get position() {\n              return position()\n            },\n            get panelProps() {\n              return panelProps()\n            },\n            get toggleButtonProps() {\n              return toggleButtonProps()\n            },\n            get closeButtonProps() {\n              return closeButtonProps()\n            },\n            get storageKey() {\n              return storageKey()\n            },\n            get panelState() {\n              return panelState()\n            },\n            get onPanelStateChange() {\n              return onPanelStateChange()\n            },\n          }}\n        />\n      )\n    }, el)\n\n    this.#isMounted = true\n    this.#dispose = dispose\n  }\n\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error(\"DB Devtools is not mounted\")\n    }\n    this.#dispose?.()\n    this.#isMounted = false\n  }\n}\n\nexport { TanstackDbDevtools }"],"mappings":"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","names":["import_solid_js","import_jsx_runtime","import_solid_js","import_jsx_runtime","import_solid_js","import_jsx_runtime","import_solid_js","import_jsx_runtime","DbDevtools"]}